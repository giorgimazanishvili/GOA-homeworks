# გადამეორება

#ციკლები!

#ციკლი არის ერთი და იგივე ოპერაციის შესრულება რამდენჯერმე.

for i in range(1,20, 2):
    print(i)

    # for არის ციკლის შესაქმნელად საჭირო keyword.
    # i - საიტერაციო ცვლადი (იტერაცია ნიშნავს განმეორებას), საიტერაციო ცვლადს შეგვიძლია მივანიჭოთ ნებისმიერი სახელი.
    # in - ში
    # range - დიაპაზონი. 
    # range ფუნქციას გადაეცემა 3 არგუმენტი (start, end, step), თუ ჩვენ მას გადავცემთ მხოლოდ ერთ არგუმენტს, იგი ავტომატურად მიიღებს end - ის მნიშვნელობას, start ავტომატურად იქნება 0 - ის ტოლი ხოლო step ავტომატურად იქნება 1 - ის ტოლი.


i = 0
while i < 41:
    print(i)
    i = i + 1 

    # i - საიტერაციო ცვლადის დეკლარაცია.
    # while - ციკლის შესაქმნელად საჭირო keyword. (სანამ)
    # ციკლი იმუშავებს მანამდე სანამ i ნაკლებია 41-ზე.
    # თითოეულ დატრიალებაზე დაიპრინტება საიტერაციო ცვლადი i, რომელიც ყოველ გამეორებაზე იცვლის მნიშვნელობას.
    # i = i + 1 ეს არის საიტერაციო ცვლადის ინკრემენტაცია (გაზრდა)
    
#ფუნქციები!

#ზოგადად ფუნქცია არის ის რაც ასრულებს რაღაც მოქმედებას იმდენჯერ, რამდენჯერაც მომხმარებელი ისურვებს. 

def func():
    for i in range(10):
        print(i)  

# ფუნქციის შესაქმნელად ვიყენებთ def keyword - ს.
# def keyword - ის შემდეგ გადავცემთ ფუნქციის სახელს და ბოლოში ფრჩხილებს, რომელშიც ფუნქციას გადაეცემა არგუმენტები/პარამეტრები. 
# ფუნქცია არ იმუშავებს გამოძახების გარეშე, გამოძახებისთვის კი საკმარისია უბრალოდ დავწეროთ ფუნქციის სახელი და ფრჩხილები არგუმენტებით(თუ გვაქვს)

def welcome(name):
    print("Hello, " + name + "!")
print(welcome("gio"))

    #ეს არის მისალმების ფუნქცია, რომელსაც გადაეცემა 1 არგუმენტი/პარამეტრი (name). გამოძახებისას ფრჩხილებში რა მნიშვნელობასაც ჩავწერთ, ის მნიშვნელობა ჩაჯდება ქვემოთ, პრინტ ფუნქციაში და გამოვა ისე, რომ ფუნქცია მოგვესალმება.